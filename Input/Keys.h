#pragma once

#define VK_BACK					case(0x08): return Key::Backspace; 
#define VK_TAB					case(0x09): return Key::Tab; 
#define VK_RETURN				case(0x0D): return Key::Return; 
#define VK_SHIFT				case(0x10): return Key::LeftShift; 
#define VK_CONTROL				case(0x11): return Key::LeftControl; 
#define VK_MENU					case(0x12): return Key::LeftAlt; 
#define VK_PAUSE				case(0x13): return Key::Pause; 
#define VK_CAPITAL				case(0x14): return Key::Capital; //Caps Lock
#define VK_ESCAPE				case(0x1B): return Key::Escape; 
#define VK_SPACE				case(0x20): return Key::Space; 
#define VK_PRIOR				case(0x21): return Key::PageUp; 
#define VK_NEXT					case(0x22): return Key::PageDown; 
#define VK_END					case(0x23): return Key::End; 
#define VK_HOME					case(0x24): return Key::Home; 
#define VK_LEFT					case(0x25): return Key::ArrowLeft; 
#define VK_UP					case(0x26): return Key::ArrowUp; 
#define VK_RIGHT				case(0x27): return Key::ArrowRight; 
#define VK_DOWN					case(0x28): return Key::ArrowDown; 
#define VK_INSERT				case(0x2D): return Key::Insert; 
#define VK_DELETE				case(0x2E): return Key::Delete; 
#define VK_0					case(0x30): return Key::Zero; 
#define VK_1					case(0x31): return Key::One; 
#define VK_2					case(0x32): return Key::Two; 
#define VK_3					case(0x33): return Key::Three; 
#define VK_4					case(0x34): return Key::Four; 
#define VK_5					case(0x35): return Key::Five; 
#define VK_6					case(0x36): return Key::Six; 
#define VK_7					case(0x37): return Key::Seven; 
#define VK_8					case(0x38): return Key::Eight; 
#define VK_9					case(0x39): return Key::Nine; 
#define VK_A					case(0x41): return Key::A; 
#define VK_B					case(0x42): return Key::B; 
#define VK_C					case(0x43): return Key::C; 
#define VK_D					case(0x44): return Key::D; 
#define VK_E					case(0x45): return Key::E; 
#define VK_F					case(0x46): return Key::F; 
#define VK_G					case(0x47): return Key::G; 
#define VK_H					case(0x48): return Key::H; 
#define VK_I					case(0x49): return Key::I; 
#define VK_J					case(0x4A): return Key::J; 
#define VK_K					case(0x4B): return Key::K; 
#define VK_L					case(0x4C): return Key::L; 
#define VK_M					case(0x4D): return Key::M; 
#define VK_N					case(0x4E): return Key::N; 
#define VK_O					case(0x4F): return Key::O; 
#define VK_P					case(0x50): return Key::P; 
#define VK_Q					case(0x51): return Key::Q; 
#define VK_R					case(0x52): return Key::R; 
#define VK_S					case(0x53): return Key::S; 
#define VK_T					case(0x54): return Key::T; 
#define VK_U					case(0x55): return Key::U; 
#define VK_V					case(0x56): return Key::V; 
#define VK_W					case(0x57): return Key::W; 
#define VK_X					case(0x58): return Key::X; 
#define VK_Y					case(0x59): return Key::Y; 
#define VK_Z					case(0x5A): return Key::Z; 
#define VK_LWIN					case(0x5B): return Key::LeftWindows; 
#define VK_RWIN					case(0x5C): return Key::RightWindows; 
#define VK_APPS					case(0x5D): return Key::AppMenu; 
#define VK_SLEEP				case(0x5F): return Key::Sleep; 
#define VK_NUMPAD0				case(0x60): return Key::Numpad0; 
#define VK_NUMPAD1				case(0x61): return Key::Numpad1; 
#define VK_NUMPAD2				case(0x62): return Key::Numpad2; 
#define VK_NUMPAD3				case(0x63): return Key::Numpad3; 
#define VK_NUMPAD4				case(0x64): return Key::Numpad4; 
#define VK_NUMPAD5				case(0x65): return Key::Numpad5; 
#define VK_NUMPAD6				case(0x66): return Key::Numpad6; 
#define VK_NUMPAD7				case(0x67): return Key::Numpad7; 
#define VK_NUMPAD8				case(0x68): return Key::Numpad8; 
#define VK_NUMPAD9				case(0x69): return Key::Numpad9; 
#define VK_MULTIPLY				case(0x6A): return Key::Multiply; 
#define VK_ADD					case(0x6B): return Key::Add; 
#define VK_SUBTRACT				case(0x6D): return Key::Subtract; 
#define VK_DECIMAL				case(0x6E): return Key::Decimal; 
#define VK_DIVIDE				case(0x6F): return Key::Slash; 
#define VK_F1					case(0x70): return Key::F1; 
#define VK_F2					case(0x71): return Key::F2; 
#define VK_F3					case(0x72): return Key::F3; 
#define VK_F4					case(0x73): return Key::F4; 
#define VK_F5					case(0x74): return Key::F5; 
#define VK_F6					case(0x75): return Key::F6; 
#define VK_F7					case(0x76): return Key::F7; 
#define VK_F8					case(0x77): return Key::F8; 
#define VK_F9					case(0x78): return Key::F9; 
#define VK_F10					case(0x79): return Key::F10; 
#define VK_F11					case(0x7A): return Key::F11; 
#define VK_F12					case(0x7B): return Key::F12; 
#define VK_F13					case(0x7C): return Key::F13; 
#define VK_F14					case(0x7D): return Key::F14; 
#define VK_F15					case(0x7E): return Key::F15; 
#define VK_NUMLOCK				case(0x90): return Key::NumLock; 
#define VK_SCROLL				case(0x91): return Key::ScrollLock; 
#define VK_PRINTSCREEN			case(0x9A): return Key::SysRq; 
#define VK_LSHIFT				case(0xA0): return Key::LeftShift; 
#define VK_RSHIFT				case(0xA1): return Key::RightShift; 
#define VK_LCONTROL				case(0xA2): return Key::LeftControl; 
#define VK_RCONTROL				case(0xA3): return Key::RightControl; 
#define VK_BROWSER_BACK			case(0xA6): return Key::WebBack; 
#define VK_BROWSER_FORWARD		case(0xA7): return Key::WebForward; 
#define VK_BROWSER_REFRESH		case(0xA8): return Key::WebRefresh; 
#define VK_BROWSER_STOP			case(0xA9): return Key::WebStop; 
#define VK_BROWSER_SEARCH		case(0xAA): return Key::WebSearch; 
#define VK_BROWSER_FAVORITES	case(0xAB): return Key::WebFavorites; 
#define VK_BROWSER_HOME			case(0xAC): return Key::WebHome; 
#define VK_VOLUME_MUTE			case(0xAD): return Key::Mute; 
#define VK_VOLUME_DOWN			case(0xAE): return Key::VolumeDown; 
#define VK_VOLUME_UP			case(0xAF): return Key::VolumeUp; 
#define VK_MEDIA_NEXT_TRACK		case(0xB0): return Key::NextTrack; 
#define VK_MEDIA_PREV_TRACK		case(0xB1): return Key::PrevTrack; 
#define VK_MEDIA_STOP			case(0xB2): return Key::MediaStop; 
#define VK_MEDIA_PLAY_PAUSE		case(0xB3): return Key::PlayPause; 
#define VK_LAUNCH_MAIL			case(0xB4): return Key::Mail; 
#define VK_LAUNCH_MEDIA_SELECT	case(0xB5): return Key::MediaSelect;
#define VK_OEM_1				case(0xBA): return Key::Semicolon; 
#define VK_OEM_PLUS				case(0xBB): return Key::Equals; 
#define VK_OEM_COMMA			case(0xBC): return Key::Comma; 
#define VK_OEM_MINUS			case(0xBD): return Key::Minus; 
#define VK_OEM_PERIOD			case(0xBE): return Key::Period; 
#define VK_OEM_2				case(0xBF): return Key::Slash; 
#define VK_OEM_3				case(0xC0): return Key::Grave; 
#define VK_OEM_4				case(0xDB): return Key::LeftBracket; 
#define VK_OEM_5				case(0xDC): return Key::Backslash; 
#define VK_OEM_6				case(0xDD): return Key::RightBracket; 
#define VK_OEM_7				case(0xDE): return Key::Apostrophe; 
#define VK_OEM_102				case(0xE2): return Key::OEM_102; 